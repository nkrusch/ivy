[project]
name = "ivy"
version = "1.0.0"
description = "A Python boilerplate for an IoT node data acqusition system supporting remote configuration and software updates"
requires-python = ">=3.10,<4.0"
authors = [{ name = "Moritz Makowski", email = "moritz.makowski@tum.de" }]
dependencies = [
  "click>=8.1.7",
  "filelock>=3.16.1",
  "pydantic>=2.9.2",
  "pytest>=8.3.3",
  "python-dotenv>=1.0.1",
  "psutil>=6.1.0",
  "tenta>=0.1.5",
  "tum-esm-utils>=2.4.0",
  "typing-extensions>=4.12.2",
  "paho-mqtt>=2.1.0",
]
classifiers = [
  "License :: OSI Approved :: GNU General Public License (GPL)",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
license = { text = "GPL-3.0" }
readme = "README.md"

[project.urls]
repository = "https://github.com/tum-esm/ivy"
documentation = "https://tum-esm-ivy.netlify.app/"

[project.optional-dependencies]
dev = [
  "docstring-parser>=0.16",
  "jsonref>=1.1.0",
  "mypy>=1.13.0",
  "pytest-cov>=6.0.0",
  "setuptools>=75.5.0",
  "types-psutil>=6.1.0.20241102",
  "ruff>=0.8.4",
  "pytest-order>=1.3.0",
]
[tool.pdm]
distribution = false

[tool.ruff]
line-length = 100

[tool.mypy]
implicit_reexport = true
plugins = ["pydantic.mypy"]
strict = true
warn_unused_ignores = false

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["jsonref"]

[tool.pytest.ini_options]
markers = [
  "quick: can be run in any environment (< 10s)",
  "updater: can be run in any environment (> 10s)",
  "integration: can only be run on a configured system (< 10s)",
  "version_change: will run before switching to a new version",
]

[tool.pdm.scripts]
quick-tests = { shell = """
  pytest --verbose -m "quick" --cov=src --exitfirst tests/
  """ }
integration-tests = { shell = """
  pytest --verbose -m "integration" --cov=src --exitfirst tests/
  """ }
updater-tests = { shell = """
  export IVY_ROOT_DIR="/tmp/ivy-ci-test-$(date +%s)" &&
  echo running pytests with IVY_ROOT_DIR=$IVY_ROOT_DIR &&
  mkdir $IVY_ROOT_DIR &&
  pytest --verbose -m "updater" --cov=src --exitfirst tests/
  rm -rf /tmp/ivy-ci-test-*
  """ }
